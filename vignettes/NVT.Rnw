%\VignetteIndexEntry{Visualize and RNA-seq data normalization with the "NVT" package}
%\VignettePackage{NVT}
%\VignetteEngine{knitr::knitr}

% To compile this document
% library('knitr'); rm(list=ls()); knit('NVT.Rnw')

\documentclass[11pt]{article}

\newcommand{\nvt}{\textit{NVT}}
\newcommand{\lowtilde}{\raise.17ex\hbox{$\scriptstyle\mathtt{\sim}$}}

<<knitr, echo=FALSE, results="hide">>=
library("knitr")
opts_chunk$set(
  tidy=FALSE,
  dev="png",
  fig.show="hide",
  #fig.width=4, fig.height=4.5,
  #cache=TRUE,
  message=FALSE)
@

<<style-knitr, eval=TRUE, echo=FALSE, results="asis">>=
BiocStyle::latex()
@

\author{Thomas Eder$^{1,2}$, Thomas Rattei$^{1}$\\[1em]
  \small{$^{1}$ CUBE Division of Computational Systems Biology,} \\
  \small{Department of Microbiology and Ecosystem Science,} \\
  \small{University of Vienna, Althanstrasse 14, 1090 Vienna, Austria. } \\
  \small{$^{2}$ Ludwig Boltzmann Institute for Cancer Research,} \\
  \small{Waehringer Strasse 13A, 1090 Vienna, Austria.} }

\title{Visualization and evaluation of RNA-seq data normalization -- the Normalization Visualization Tool}

\begin{document}

\maketitle

\begin{abstract}

Differential expression analysis between two samples, is a common task in the analysis of RNA-Seq data. In order to identify differential expressed genes, it is crucial that the two compared data sets are normalized. For the task of normalizing gene expression data there are multiple methods available. However all of these methods are based on certain assumptions, these can or can not be suitable for the data which should be normalized. One important question is, how the normalization affects the data and which normalization method and its assumptions apply to the expression data. The \nvt{} package provides a fast and simple way to analyze multiple normalization methods via visualization and correlation values. This vignette explains the use of the package and demonstrates a typical work flow.

  \vspace{1em}

  \textbf{NVT version:} \Sexpr{packageVersion("NVT")}

  \vspace{1em}

  \begin{center}
    \begin{tabular}{ | l | }
      \hline
      If you use \nvt{} in published research, please cite:  \\
      \\
      T. Eder, T.Rattei: \textbf{NVT: a fast and simple test for} \\
      \textbf{the evaluation of RNA-Seq normalization strategies}. \\
      \emph{JournalXXX} 2016, \textbf{XX}:XXX. \\
      \url{http://dx.doi.org/xxx/xxx}  \\
      \hline
    \end{tabular}
  \end{center}

\end{abstract}

\newpage

\tableofcontents

\newpage

\section{Installation}

The latest NVT package can be downloaded from: \url{https://github.com/Edert/NVT/releases}. The installation of the package can be done directly in R.

<<installNVT, eval=FALSE>>=
install.packages(file.path("/home/user/Downloads/","NVT_1.0.tar.gz"),
repos=NULL, type="source")
@

\section{Standard work flow}

Initially the library has to be loaded, which provides access to the data examples \ref{sec:loaddata} and the \nvt functions.

<<loadNVT>>=
library("NVT")
@

\subsection{Load data}

For the demonstration of the \nvt functions we need gene expression data, so we load the example data provided with the package. We use the two human expression data sets \textit{GSM1275862} and \textit{GSM1275863} from the \href{https://bioconductor.org/packages/release/data/experiment/html/airway.html}{airway}\cite{himes2014} package.

\subsubsection{Load expression data} \label{sec:loaddata}

We simply load the provided data sets \textit{myexp1} from \textit{GSM1275862}, \textit{myexp2} from \textit{GSM1275863} and the length data per gene as \textit{mylen}.

<<loadExData>>=
data(mylen)
data(myexp1)
data(myexp2)

#show just the first four elements of the loaded data
head(mylen,4)
head(myexp1,4)
@

In order to evaluate the expression between the two RNA-seq expression samples, we have to define a list of human housekeeping genes \textit{GAPDH, ALB, ACTB, QARS, PGK2, HPRT1, ADA} and \textit{POLR2L}.

<<createList>>=
mylist1<-c("ENSG00000111640","ENSG00000163631","ENSG00000075624",
           "ENSG00000172053","ENSG00000170950","ENSG00000165704",
           "ENSG00000196839","ENSG00000177700")
@

\subsubsection{Load gene length data}

Instead of using the length data generated directly in R or using a simple flat file, it is also possible to load the gene or exon length data directly from an annotation file in gtf or gff format. This function utilizes the \href{https://bioconductor.org/packages/release/bioc/html/GenomicRanges.html}{GenomicRanges}\cite{lawrence2013} and \href{https://www.bioconductor.org/packages/3.3/bioc/html/rtracklayer.html}{rtracklayer}\cite{lawrence2009} packages.

\begin{itemize}
 \item gff-version: version of the provided gff file $[ gff1,gff2,gff3,gtf ]$
 \item gff-feature: feature to use $[ default: exon ]$
 \item gff-name: name to use $[ default: gene\_id ]$
\end{itemize}

<<loadLengthData>>=
#this line gets the path to the gff file provided in the NVT package
#(annotation from Chlamydia trachomatis, ACCESSION: NC_000117 )
mygffpath <- system.file("extdata", "Ctr-D-UW3CX.gff", package = "NVT")

#this function loads the gff file from the gffpath
mylen1 <- NVTloadgff(mygffpath,"gff3","gene","locus_tag")

head(mylen1)
@

\subsection{Generate NVTdata objects}

In the first step you need to generate an \textit{NVTdata} object with the \textit{NVTinit} function. Here you have to provide the list of housekeeping genes, the two gene expression samples and the normalization method. Optionally you can also add the gene or exon length data.

The normalization methods are:
\begin{itemize}
 \item N = No normalization
 \item TC = Total count normalization
 \item Med = Median normalization
 \item TMM = Trimmed Mean of M-values normalization,
 \item UQ = Upper Quartile normalization
 \item UQ2 = Upper Quartile normalization (from \href{https://www.bioconductor.org/packages/release/bioc/html/NOISeq.html}{NOISeq}\cite{tarazona2011})
 \item Q = Quantile normalization
 \item RPKM = Reads Per Kilobase per Million mapped reads normalization
 \item RPM = Reads Per Million mapped reads normalization
 \item TPM = Transcripts Per Million normalization
 \item DEQ = Relative log expression method included in the \href{https://www.bioconductor.org/packages/release/bioc/html/DESeq.html}{DESeq}\cite{anders2010} package
 \item G = Use the provided genes to normalize
\end{itemize}

For the most methods no length information is required.

<<generateNVTobj1>>=
mynvt <- NVTinit(mylist1,myexp1,myexp2,"TMM")
@

But for RPKM, RPM and TPM normalization the length data has to be provided.

<<generateNVTobj2>>=
mynvt <- NVTinit(mylist1,myexp1,myexp2,"RPKM",mylen)
@

\subsubsection{Normalize the NVTdata }

The now initialized \textit{NVTdata} object can be normalized in the next step.

<<normlaizeNVTobj>>=
mynorm <- NVTnormalize(mynvt)
@

If required the now normalized data can be retrieved easily.

<<getnorm>>=
mynvalues <- show(mynorm)

head(mynvalues)
@

\subsection{Visualize expression data}

One of the key features of \nvt is the plotting of the XY-Scatter-Plots. This can be done with two functions:
\textit{NVTplot} and \textit{NVTadvancedplot}.

\newpage

\subsubsection{Simple plot}

The normalized \textit{NVTdata} object can be visualized with the plot function. With the second parameter you can modify the size-ratio of the text and the data points. All expression values are shown as grey dots and the linear model as red line, it is calculated with the data from the housekeeping genes only. The dashed grey line highlights the diagonal, so the perfect correlation between the two data sets.

<<simpleplot, dev="pdf", fig.width=3.5, fig.height=3.5>>=
NVTplot(mynorm,0.6)
@

\begin{figure}[!h]
\centering
\includegraphics[width=.8\textwidth]{figure/simpleplot-1}
\caption{
  \textbf{XY-Scatter-Plot.}
  The resulting plot from the simple NVTplot function}
\label{fig:MA}
\end{figure}

\newpage

\subsubsection{Advanced plot}

The \textit{NVTadvancedplot} plots via \href{https://cran.r-project.org/web/packages/ggplot2/index.html}{ggplot2}\cite{wickham2009} and the size parameters control data points, text and labels separately. Here we use the default values of 1 for the data points and the text and increase the labels of the housekeeping genes to 2. Again the grey dots represent the expression data and their density is visualized by the rug in dark red for x- and y-axis.
The linear model of the housekeeping gene data is shown in red and the diagonal is highlighted as grey dashed line. As we want to compare different methods we now normalize with the TMM method.

<<advancedplot, dev="pdf", fig.width=3.5, fig.height=3.5>>=
mynvt <- NVTinit(mylist1,myexp1,myexp2,"TMM",mylen)
mynorm <- NVTnormalize(mynvt)
NVTadvancedplot(mynorm,1,1,2)
@

\begin{figure}[!h]
\centering
\includegraphics[width=.8\textwidth]{figure/advancedplot-1}
\caption{
  \textbf{Advanced XY-Scatter-Plot.}
  The NVTadvancedplot function results in a plot produced by ggplot2 with a rug on both axis, indicating the density of the data-points}
\label{fig:MA}
\end{figure}

\newpage

\subsection{Correlation values}

In addition to the graphical representation of the gene expression data, the correlation coefficients of the housekeeping genes of the two samples can be calculated with the functions \textit{NVTpearson}, \textit{NVTrmsd} and \textit{NVTmae}.

\subsubsection{Pearson correlation}

The Pearson correlation coefficient of the normalized expression of the housekeeping genes is calculated with the following command, using an already normalized \textit{NVTdata} object.

<<pearson>>=
NVTpearson(mynorm)
@

\subsubsection{RMSD and MEA correlation}

The root mean square error (RMSE) also called the root mean square deviation (RMSD) is calculated with the \textit{NVTrmsd} function.

<<rmsd>>=
NVTrmsd(mynorm)
@

And the mean absolute error (MAE) can be calculated and retrieved with the \textit{NVTmae} function.

<<mae>>=
NVTmae(mynorm)
@

\subsection{Test all methods}

To test more normalization methods on the provided data sets in one single step, the correlation coefficients of all implemented normalization methods can be calculated with the \textit{NVTtestall} function.
It requires a normalized \textit{NVTdata} object and the correlation coefficient you are interested in. The method can be defined with:

\begin{itemize}
 \item p = Pearson correlation
 \item rmsd = root mean square deviation
 \item mae = mean absolute error
\end{itemize}

<<testall>>=
NVTtestall(mynorm,"p")
@

\section{Session Info}

<<sessInfo, results="asis", echo=FALSE>>=
toLatex(sessionInfo())
@

<<resetOptions, results="hide", echo=FALSE>>=
options(prompt="> ", continue="+ ")
@

\newpage

\bibliography{library}

\end{document}
